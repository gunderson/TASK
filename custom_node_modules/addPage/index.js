#! /usr/bin/env node --harmony

const Path = require( 'path' );
const Fs = require( 'fs' );
const _ = require( 'lodash' );
const yargs = require( 'yargs' );
// cli

let argv = yargs
	.usage( '$0 <cmd> [args]' )
	.option( 'name', {
		alias: 'n',
		default: 'Default',
		describe: 'Page Name: Capital-First-Dash-Format'
	} )
	// .command('hello', 'welcome ter yargs!', {}, function (argv) {
	//   console.log('hello', argv.name, 'welcome to yargs!')
	// })
	.help( 'help' )
	.argv;

console.log( argv.name );

let name = argv.name + '-Page';
name = 'Test';
//init( name );

function init( name ) {
	makeJS();
	makePUG();
	makeSASS();
	addToApp();
	addToMainMenu();
	addToSassIndex();
}

// make js
function makeJS( name ) {
	let template = Fs.readFileSync( Path.join( 'templates', 'page.js.ust' ), 'utf-8' );
	let rendered = _.template( template )( {
		name
	} );
	Fs.writeFileSync( Path.resolve( '..', 'src/js/views/pages', `${name}.js` ), rendered );
	return rendered;
}
// make pug
function makePUG( name ) {
	let template = Fs.readFileSync( Path.join( 'templates', 'page.pug.ust' ), 'utf-8' );
	let rendered = _.template( template )( {
		name
	} );
	Fs.writeFileSync( Path.resolve( '..', 'src/pug/static/pages', `${name}.pug` ), rendered );
	return rendered;
}
// make sass
function makeSASS( name ) {
	let template = Fs.readFileSync( Path.join( 'templates', 'page.sass.ust' ), 'utf-8' );
	let rendered = _.template( template )( {
		name
	} );
	Fs.writeFileSync( Path.resolve( '..', 'src/sass/pages', `${name}.sass` ), rendered );
	return rendered;
}

// add to main-menu
function addToMainMenu() {
	let srcPath = Path.resolve( '..', 'src/pug/static/ui/_main-menu.pug' );
	let fileContents = Fs.readFileSync( srcPath, 'utf-8' );
	// remove trailing line break;
	fileContents = fileContents.slice( fileContents.length - 2 );
	fileContents += `\ta.closer(href="#/${name}") ${name} Page\n`;
	Fs.writeFileSync( srcPath, fileContents );
	return fileContents;
}
// add to app
function addToApp( name ) {
	let importsMarker = '// imports\n';
	let exportsMarker = '// exports\n';
	let varName = _.camelCase( name );

	let srcPath = Path.resolve( '..', 'src/js/views/index.js' );
	let fileContents = Fs.readFileSync( srcPath, 'utf-8' );
	// remove trailing line break;
	fileContents = fileContents.slice( fileContents.length - 2 );

	let partial = fileContents.split( importsMarker )[ 1 ];
	partial = `var ${varName} = require( './${_.upperFirst( name )}' );\n`;
	fileContents = importsMarker + partial;

	partial = fileContents.split( exportsMarker )[ 1 ];
	partial = `new ${varName}( {
		col: 0,
		row: 0
	} ),\n`;
	fileContents = exportsMarker + partial;

	Fs.writeFileSync( srcPath, fileContents );
	return fileContents;

}
// add to sass index
function addToSassIndex() {

}
