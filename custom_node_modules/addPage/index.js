#! /usr/bin/env node --harmony

const Path = require( 'path' );
const Fs = require( 'fs' );
const _ = require( 'lodash' );
const yargs = require( 'yargs' );

// ------------------------------------------
// cli

let argv = yargs
	.usage( '$0 <cmd> [args]' )
	.option( 'name', {
		alias: 'n',
		default: 'Default',
		describe: 'Page Name: Capital-First-Dash-Format'
	} )
	// .command('hello', 'welcome ter yargs!', {}, function (argv) {
	//   console.log('hello', argv.name, 'welcome to yargs!')
	// })
	.help( 'help' )
	.argv;

let name = argv.name;

// ------------------------------------------
// START

init( name );

// ------------------------------------------

function init( name ) {
	makeJS( name );
	makePUG( name );
	makeSASS( name );
	addToMainMenu( name );
	addToJSIndex( name );
	addToPugIndex( name );
	addToSassIndex( name );
}

// ------------------------------------------

function makeJS( name ) {
	let template = Fs.readFileSync( Path.join( __dirname, 'templates', 'page.js.ust' ), 'utf-8' );
	let rendered = _.template( template )( {
		name
	} );
	Fs.writeFileSync( Path.resolve( __dirname, '../..', 'src/js/views/pages', `${name}-Page.js` ), rendered );
	return rendered;
}

// ------------------------------------------

function makePUG( name ) {
	let template = Fs.readFileSync( Path.join( __dirname, 'templates', 'page.pug.ust' ), 'utf-8' );
	let rendered = _.template( template )( {
		name
	} );
	Fs.writeFileSync( Path.resolve( __dirname, '../..', 'src/pug/static/pages', `_${name}-Page.pug` ), rendered );
	return rendered;
}

// ------------------------------------------

function makeSASS( name ) {
	let template = Fs.readFileSync( Path.join( __dirname, 'templates', 'page.sass.ust' ), 'utf-8' );
	let rendered = _.template( template )( {
		name
	} );
	Fs.writeFileSync( Path.resolve( __dirname, '../..', 'src/sass/pages', `_${name}-Page.sass` ), rendered );
	return rendered;
}

// ------------------------------------------

function addToMainMenu() {
	let srcPath = Path.resolve( __dirname, '../..', 'src/pug/static/ui/_main-menu.pug' );
	let fileContents = Fs.readFileSync( srcPath, 'utf-8' );
	fileContents += `\ta.closer(href="#/${name}") ${name} Page\n`;
	Fs.writeFileSync( srcPath, fileContents );
	return fileContents;
}

// ------------------------------------------

function addToJSIndex( name ) {
	let importsMarker = '// imports\n';
	let exportsMarker = '// exports\n';
	let varName = _.upperFirst( _.camelCase( name ) );
	let srcPath = Path.resolve( __dirname, '../..', 'src/js/views/pages/index.js' );
	let fileContents = Fs.readFileSync( srcPath, 'utf-8' );
	let parts = fileContents.split( importsMarker );
	parts[ 1 ] = `var ${varName} = require( './${name}-Page' );\n` + parts[ 1 ];
	fileContents = parts.join( importsMarker );
	parts = fileContents.split( exportsMarker );
	parts[ 1 ] = `new ${varName}( {
		col: 0,
		row: 0
	} ),\n` + parts[ 1 ];
	fileContents = parts.join( exportsMarker );

	Fs.writeFileSync( srcPath, fileContents );

	return fileContents;

}

// ------------------------------------------

function addToPugIndex( name ) {
	let importsMarker = '// imports\n';
	let srcPath = Path.resolve( __dirname, '../..', 'src/pug/static/index.pug' );
	let fileContents = Fs.readFileSync( srcPath, 'utf-8' );
	let parts = fileContents.split( importsMarker );
	// include pages/_control-panel-page
	parts[ 1 ] = `\t\t\t\tinclude pages/_${name}-Page\n` + parts[ 1 ];
	fileContents = parts.join( importsMarker );

	Fs.writeFileSync( srcPath, fileContents );

	return fileContents;

}

// ------------------------------------------

function addToSassIndex() {
	let srcPath = Path.resolve( __dirname, '../..', 'src/sass/pages/_index.sass' );
	let fileContents = Fs.readFileSync( srcPath, 'utf-8' );
	fileContents += `@import "${name}-Page"\n`;
	Fs.writeFileSync( srcPath, fileContents );
	return fileContents;
}
